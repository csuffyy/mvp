@page "/InitialSetup/PersonalDetails"
@using Hypomos.Interfaces.Models
@inject NavigationManager NavigationManager

<form class="form-horizontal">
    <div class="form-group">
        <label for="Surname" class="col-sm-2 control-label">Surname</label>
        <div class="col-sm-10">
            <input type="text" class="form-control" name="Surname" @bind="Surname">
        </div>
    </div>
    <div class="form-group">
        <label for="GivenName" class="col-sm-2 control-label">GivenName</label>
        <div class="col-sm-10">
            <input type="text" class="form-control" name="GivenName" @bind="GivenName">
        </div>
    </div>
    <div class="form-group">
        <label for="Email" class="col-sm-2 control-label">Email</label>
        <div class="col-sm-10">
            <input type="text" class="form-control" name="Email" @bind="Email">
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <button class="btn btn-default btn-primary" @onclick="Next">Next</button>
        </div>
    </div>
</form>

@code
{
    [CascadingParameter (Name = "User")] public HypomosUser User { get; set; }
    [CascadingParameter (Name = "InitialSetupStateMachine")] public InitialSetupStateMachine InitialSetupStateMachine { get; set; }
    
    private string GivenName { get; set; }
    private string Surname { get; set; }
    private string Email { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        GivenName = User?.GivenName;
        Surname = User?.Surname;
        Email = User?.Email;
    }

    private async Task Next()
    {
        await InitialSetupStateMachine.SetPersonalDetails(new UserPersonalDetails
        {
            Username = User.Username,
            EmailAddress = Email,
            Surname = Surname,
            GivenName = GivenName
        });
        
        NavigationManager.NavigateTo(InitialSetupStateMachine.NavigationTarget);
    }
}